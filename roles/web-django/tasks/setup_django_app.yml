---

- name: Stop supervisor
  command: "supervisorctl stop all"

- name: create virtualenv and install requirements into virtualenv 
  sudo_user: "{{ app_user }}"
  raw: "( cd && source virtualenvwrapper.sh && mkvirtualenv {{ application_name }} && workon {{ application_name }} && add2virtualenv {{ application_name }} && pip install -r {{ requirements_file }})>/home/{{ app_user }}/require.log"

- name: Create Django conf
  template: src=settings.j2 dest={{ git_project_path }}/settings/config.json
    owner={{ app_user }}
    group={{ app_user }}
    mode=0400

- name: Create virtual env postactivate
  template: src=virtualenv_postactivate.j2 dest={{ virtualenv_path }}/bin/postactivate
    owner={{ app_user }}
    group={{ app_user }}

- name: Run the Django syncdb command
  django_manage:
    command: syncdb
    app_path: '{{ application_path }}'
    virtualenv: '{{ virtualenv_path }}'
    settings: '{{ django_settings_file }}'
  environment: django_environment
  when: run_django_syncdb
  tags: django

- name: Run Django South migrations
  django_manage:
    command: migrate
    app_path: '{{ application_path }}'
    virtualenv: '{{ virtualenv_path }}'
    settings: '{{ django_settings_file }}'
  environment: django_environment
  when: run_django_south_migration
  tags: django

- name: Run Django collectstatic
  django_manage:
    command: collectstatic
    app_path: '{{ application_path }}'
    virtualenv: '{{ virtualenv_path }}'
    settings: '{{ django_settings_file }}'
  environment: django_environment
  when: run_django_collectstatic
  tags: django
